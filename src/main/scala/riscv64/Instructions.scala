package riscv64

import chisel3._
import chisel3.util._

//noinspection ScalaStyle
/* Automatically generated by parse-opcodes */
object Instructions {
    def BEQ:                  BitPat = BitPat("b?????????????????000?????1100011")
    def BNE:                  BitPat = BitPat("b?????????????????001?????1100011")
    def BLT:                  BitPat = BitPat("b?????????????????100?????1100011")
    def BGE:                  BitPat = BitPat("b?????????????????101?????1100011")
    def BLTU:                 BitPat = BitPat("b?????????????????110?????1100011")
    def BGEU:                 BitPat = BitPat("b?????????????????111?????1100011")
    def JALR:                 BitPat = BitPat("b?????????????????000?????1100111")
    def JAL:                  BitPat = BitPat("b?????????????????????????1101111")
    def LUI:                  BitPat = BitPat("b?????????????????????????0110111")
    def AUIPC:                BitPat = BitPat("b?????????????????????????0010111")
    def ADDI:                 BitPat = BitPat("b?????????????????000?????0010011")
    def SLLI:                 BitPat = BitPat("b0000000??????????001?????0010011")
    def SLTI:                 BitPat = BitPat("b?????????????????010?????0010011")
    def SLTIU:                BitPat = BitPat("b?????????????????011?????0010011")
    def XORI:                 BitPat = BitPat("b?????????????????100?????0010011")
    def SRLI:                 BitPat = BitPat("b000000???????????101?????0010011")
    def SRAI:                 BitPat = BitPat("b010000???????????101?????0010011")
    def ORI:                  BitPat = BitPat("b?????????????????110?????0010011")
    def ANDI:                 BitPat = BitPat("b?????????????????111?????0010011")
    def ADD:                  BitPat = BitPat("b0000000??????????000?????0110011")
    def SUB:                  BitPat = BitPat("b0100000??????????000?????0110011")
    def SLL:                  BitPat = BitPat("b0000000??????????001?????0110011")
    def SLT:                  BitPat = BitPat("b0000000??????????010?????0110011")
    def SLTU:                 BitPat = BitPat("b0000000??????????011?????0110011")
    def XOR:                  BitPat = BitPat("b0000000??????????100?????0110011")
    def SRL:                  BitPat = BitPat("b0000000??????????101?????0110011")
    def SRA:                  BitPat = BitPat("b0100000??????????101?????0110011")
    def OR:                   BitPat = BitPat("b0000000??????????110?????0110011")
    def AND:                  BitPat = BitPat("b0000000??????????111?????0110011")
    def LB:                   BitPat = BitPat("b?????????????????000?????0000011")
    def LH:                   BitPat = BitPat("b?????????????????001?????0000011")
    def LW:                   BitPat = BitPat("b?????????????????010?????0000011")
    def LBU:                  BitPat = BitPat("b?????????????????100?????0000011")
    def LHU:                  BitPat = BitPat("b?????????????????101?????0000011")
    def SB:                   BitPat = BitPat("b?????????????????000?????0100011")
    def SH:                   BitPat = BitPat("b?????????????????001?????0100011")
    def SW:                   BitPat = BitPat("b?????????????????010?????0100011")
    def FENCE:                BitPat = BitPat("b?????????????????000?????0001111")
    def FENCE_I:              BitPat = BitPat("b?????????????????001?????0001111")
    def ECALL:                BitPat = BitPat("b00000000000000000000000001110011")
    def EBREAK:               BitPat = BitPat("b00000000000100000000000001110011")
    def MRET:                 BitPat = BitPat("b00110000001000000000000001110011")
    def ERET:                 BitPat = BitPat("b00010000000000000000000001110011")
    def CSRRW:                BitPat = BitPat("b?????????????????001?????1110011")
    def CSRRS:                BitPat = BitPat("b?????????????????010?????1110011")
    def CSRRC:                BitPat = BitPat("b?????????????????011?????1110011")
    def CSRRWI:               BitPat = BitPat("b?????????????????101?????1110011")
    def CSRRSI:               BitPat = BitPat("b?????????????????110?????1110011")
    def CSRRCI:               BitPat = BitPat("b?????????????????111?????1110011")
    def NOP:    UInt = BitPat.bitPatToUInt(BitPat("b00000000000000000000000000010011"))
}